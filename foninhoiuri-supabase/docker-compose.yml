version: '3.8'

services:
  kong:
    image: kong:latest
    restart: unless-stopped
    environment:
      KONG_DATABASE: "off"
      KONG_PROXY_ACCESS_LOG: "/dev/stdout"
      KONG_ADMIN_ACCESS_LOG: "/dev/stdout"
      KONG_PROXY_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_ERROR_LOG: "/dev/stderr"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      KONG_DNS_RESOLVER: "8.8.8.8"
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yml"
      DASHBOARD_USERNAME: ${DASHBOARD_USERNAME}
      DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD}
    command: >
      /bin/sh -c "
      echo '_format_version: \"3.0\"' > /opt/kong/kong.yml &&
      echo '_file_content_version: \"2.1\"' >> /opt/kong/kong.yml &&
      echo 'services:' >> /opt/kong/kong.yml &&
      echo '  - name: supabase-auth-service' >> /opt/kong/kong.yml &&
      echo '    url: http://auth:9999' >> /opt/kong/kong.yml &&
      echo '    routes:' >> /opt/kong/kong.yml &&
      echo '      - name: auth-route' >> /opt/kong/kong.yml &&
      echo '        paths: [\"/auth/v1\"]' >> /opt/kong/kong.yml &&
      echo '        strip_path: false' >> /opt/kong/kong.yml &&
      echo '    plugins:' >> /opt/kong/kong.yml &&
      echo '      - name: basic-auth' >> /opt/kong/kong.yml &&
      echo '        config:' >> /opt/kong/kong.yml &&
      echo '          hide_credentials: true' >> /opt/kong/kong.yml &&
      echo '      - name: jwt' >> /opt/kong/kong.yml &&
      echo '        config:' >> /opt/kong/kong.yml &&
      echo '          uri_param_names: [\"access_token\"]' >> /opt/kong/kong.yml &&
      echo '          claims_paths: [\"payload.role\"]' >> /opt/kong/kong.yml &&
      echo '          key_set_uri: http://auth:9999/.well-known/jwks.json' >> /opt/kong/kong.yml &&
      echo '  - name: supabase-storage-service' >> /opt/kong/kong.yml &&
      echo '    url: http://storage:5000' >> /opt/kong/kong.yml &&
      echo '    routes:' >> /opt/kong/kong.yml &&
      echo '      - name: storage-route' >> /opt/kong/kong.yml &&
      echo '        paths: [\"/storage/v1\"]' >> /opt/kong/kong.yml &&
      echo '        strip_path: false' >> /opt/kong/kong.yml &&
      echo '  - name: supabase-rest-service' >> /opt/kong/kong.yml &&
      echo '    url: http://rest:3000' >> /opt/kong/kong.yml &&
      echo '    routes:' >> /opt/kong/kong.yml &&
      echo '      - name: rest-route' >> /opt/kong/kong.yml &&
      echo '        paths: [\"/rest/v1\"]' >> /opt/kong/kong.yml &&
      echo '        strip_path: false' >> /opt/kong/kong.yml &&
      echo '  - name: supabase-realtime-service' >> /opt/kong/kong.yml &&
      echo '    url: http://realtime:8080' >> /opt/kong/kong.yml &&
      echo '    routes:' >> /opt/kong/kong.yml &&
      echo '      - name: realtime-route' >> /opt/kong/kong.yml &&
      echo '        paths: [\"/realtime/v1\"]' >> /opt/kong/kong.yml &&
      echo '        strip_path: false' >> /opt/kong/kong.yml &&
      echo '  - name: supabase-studio-service' >> /opt/kong/kong.yml &&
      echo '    url: http://studio:3000' >> /opt/kong/kong.yml &&
      echo '    routes:' >> /opt/kong/kong.yml &&
      echo '      - name: studio-route' >> /opt/kong/kong.yml &&
      echo '        paths: [\"/\"]' >> /opt/kong/kong.yml &&
      echo 'consumers:' >> /opt/kong/kong.yml &&
      echo '  - username: DASHBOARD' >> /opt/kong/kong.yml &&
      echo '    basicauth_credentials:' >> /opt/kong/kong.yml &&
      echo '      - username: ${DASHBOARD_USERNAME}' >> /opt/kong/kong.yml &&
      echo '        password: ${DASHBOARD_PASSWORD}' >> /opt/kong/kong.yml &&
      echo 'plugins:' >> /opt/kong/kong.yml &&
      echo '  - name: http-log' >> /opt/kong/kong.yml &&
      echo '    service: kong-http-log-service' >> /opt/kong/kong.yml &&
      echo '    config:' >> /opt/kong/kong.yml &&
      echo '      http_endpoint: http://kong:8001/' >> /opt/kong/kong.yml &&
      " && kong start --database "off"
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - auth
      - storage
      - rest
      - realtime
      - studio

  auth:
    image: supabase/gotrue:latest
    restart: unless-stopped
    environment:
      DB_URL: postgresql://default:default@foninhoiuri-postgresql:5432/default
      JWT_SECRET: ${JWT_SECRET}
      SITE_URL: http://${DEVICE_DOMAIN_NAME}:8000
      DISABLE_SIGNUP: "false"

  storage:
    image: supabase/storage:latest
    restart: unless-stopped
    environment:
      DB_URL: postgresql://default:default@foninhoiuri-postgresql:5432/default
      JWT_SECRET: ${JWT_SECRET}
      STORAGE_BACKEND: s3
      GLOBAL_S3_BUCKET: your-supabase-bucket
      STORAGE_S3_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - ${APP_DATA_DIR}/data/supabase-storage:/var/log/supabase/storage

  rest:
    image: supabase/postgrest:latest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgresql://default:default@foninhoiuri-postgresql:5432/default
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_DB_SCHEMA: public,storage,auth,extensions
      PGRST_DB_ANON_ROLE: anon

  realtime:
    image: supabase/realtime:latest
    restart: unless-stopped
    environment:
      DB_URL: postgresql://default:default@foninhoiuri-postgresql:5432/default
      JWT_SECRET: ${JWT_SECRET}
      REDIS_URL: redis://foninhoiuri-redis:6379

  studio:
    image: supabase/studio:latest
    restart: unless-stopped
    environment:
      SUPABASE_URL: http://kong:8000
      SUPABASE_ANON_KEY: ${ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SERVICE_ROLE_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    depends_on:
      - kong

volumes:
  supabase-storage:
  supabase-functions:
