version: '3.8'

services:
  evolution-api:
    image: evolutionapi/evolution-api:v2.2.3
    container_name: evolution-api
    ports:
      - "8080:8080" # Porta externa:Porta interna do contêiner
    environment:
      # Variáveis de ambiente para o Evolution API se conectar ao Redis
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: "redis://redis:6379/0" # 'redis' é o nome do serviço Redis no Docker Compose
      CACHE_REDIS_PREFIX_KEY: "evolution"
      CACHE_REDIS_TTL: "604800"
      CACHE_REDIS_SAVE_INSTANCES: "true"
      # Outras variáveis de ambiente importantes para o Evolution API (ajuste conforme sua necessidade)
      SERVER_PORT: "8080"
      SERVER_URL: "http://evolution-api.umbrel.local" # URL para acesso interno no Umbrel
      # Se você usar PostgreSQL ou MySQL, também precisará configurar as variáveis de ambiente do banco de dados.
      # Exemplo para PostgreSQL (descomente e ajuste se necessário):
      # DATABASE_ENABLED: "true"
      # DATABASE_PROVIDER: "postgresql"
      # DATABASE_CONNECTION_URI: "postgresql://user:password@postgresql:5432/evolution?schema=public"
    volumes:
      - ${APP_DATA_DIR}/evolution-api/data:/app/data # Persistência de dados do Evolution API
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-evolution-api
    volumes:
      - ${APP_DATA_DIR}/redis:/data # Persistência de dados do Redis
    command: redis-server --appendonly yes
    restart: unless-stopped
