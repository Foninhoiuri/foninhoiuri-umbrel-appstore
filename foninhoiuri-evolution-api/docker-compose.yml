version: '3.8'

services:
  app_proxy:
    image: atendai/evolution-api:latest
    environment:
      APP_HOST: evolution_api
      APP_PORT: 8080
      PROXY_AUTH_ADD: "false"
      AUTHENTICATION_API_KEY: 63FvHHwNfjMzaj8UStNc96UTGQ94CRHY
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: "postgresql" # <-- CORRIGIDO AQUI!
      DATABASE_CONNECTION_URI: postgresql://default:default@postgres:5432/default?schema=public # <-- Adicionado schema=public
    depends_on:
      evolution_api:
        condition: service_started
      postgres:
        condition: service_healthy # Mantido o healthcheck

  evolution_api:
    image: atendai/evolution-api:latest
    restart: on-failure
    environment:
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql # <-- CORRIGIDO AQUI!
      - DATABASE_CONNECTION_URI=postgresql://default:default@postgres:5432/default?schema=public # <-- Adicionado schema=public
      - DATABASE_CONNECTION_DB_PREFIX_NAME=evo
      - DATABASE_SAVE_DATA_INSTANCE=false
      - DATABASE_SAVE_DATA_NEW_MESSAGE=false
      - DATABASE_SAVE_MESSAGE_UPDATE=false
      - DATABASE_SAVE_DATA_CONTACTS=false
      - DATABASE_SAVE_DATA_CHATS=false
    volumes:
      - ${APP_DATA_DIR}/data/evolution-api/store:/evolution/store
      - ${APP_DATA_DIR}/data/evolution-api/instances:/evolution/instances
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy # Mantido o healthcheck

  postgres:
    image: postgres:latest
    platform: linux/amd64
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: default
    ports:
      - "5432:5432"
    volumes:
      - ${APP_DATA_DIR}/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
