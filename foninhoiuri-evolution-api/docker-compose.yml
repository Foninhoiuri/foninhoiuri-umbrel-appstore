version: '3.8'

services:
  evolution_api:
    image: atendai/evolution-api:latest
    container_name: evolution_api_instance
    restart: on-failure
    environment:
      # Variáveis de autenticação (mantidas)
      - AUTHENTICATION_ENABLED=true
      - AUTHENTICATION_API_KEY=wBSKDHYiz1vqMAHQBxOW74zHLogqIqcL
      - CONFIG_SESSION_PHONE_VERSION=2.3000.1020885143
      
      # Configurações do Redis (ESSENCIAL: CACHE_REDIS_ENABLED=true)
      - CACHE_REDIS_ENABLED=true # <--- Mude esta linha para 'true'!
      - REDIS_URI=redis://redis:6379/0
      - CACHE_DRIVER=redis
      - CACHE_REDIS_HOST=redis
      - CACHE_REDIS_PORT=6379
      - CACHE_REDIS_URL=redis://redis:6379/0 # redundante, mas mantenha se preferir
      - CACHE_REDIS_PREFIX_KEY=evolution   # <--- Adicionado, conforme documentação
      - CACHE_REDIS_TTL=604800             # <--- Adicionado, conforme documentação
      - CACHE_REDIS_SAVE_INSTANCES=true    # <--- Adicionado, para salvar credenciais no Redis

      # Configurações do Banco de Dados (mantidas)
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_CONNECTION_URI=postgresql://default:default@postgres:5432/default
      
      # Configurações de Log (mantidas)
      - LOG_LEVEL=ERROR,WARN,DEBUG,INFO,LOG,VERBOSE,DARK,WEBHOOKS,WEBSOCKET,REDIS,BAILEYS
      - LOG_COLOR=true
      - LOG_BAILEYS=trace
      - SERVER_URL=http://${DEVICE_DOMAIN_NAME}
      - TZ=America/Sao_Paulo
    ports:
      - "8080:8080"
    volumes:
      - ${APP_DATA_DIR}/data/evolution-api/store:/evolution/store
      - ${APP_DATA_DIR}/data/evolution-api/instances:/evolution/instances
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy # Mantenha service_healthy e 60s para garantir estabilidade

  # ... (o restante do seu docker-compose.yml para postgres e redis permanece o mesmo) ...
  postgres:
    image: postgres:latest
    container_name: evolution_postgres
    platform: linux/amd64
    environment:
      POSTGRES_USER: default
      POSTGRES_PASSWORD: default
      POSTGRES_DB: default
    ports:
      - "5432:5432"
    volumes:
      - ${APP_DATA_DIR}/data/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    container_name: evolution_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ${APP_DATA_DIR}/data/redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 60s # Mantenha o período maior para garantir que o Redis esteja super estável
