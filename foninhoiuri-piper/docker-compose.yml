version: "3.7"

services:
  app_proxy:
    environment:
      APP_HOST: web
      APP_PORT: 5000
      PROXY_AUTH_ADD: "false"
      # Adiciona cabeçalhos de tipo de conteúdo para áudio e CORS
      # O Piper retorna WAV, mas adicionamos MP3 como boa prática.
      PROXY_RESPONSE_HEADERS_ADD: |
        Content-Type: audio/wav
        Content-Type: audio/mpeg
        Access-Control-Allow-Origin: * # Permite requisições de qualquer origem (útil para desenvolvimento/integração)
        Access-Control-Allow-Methods: POST, OPTIONS
        Access-Control-Allow-Headers: Content-Type, Accept
        Access-Control-Max-Age: 86400
  web:
    image: artibex/piper-http:latest # Use a tag específica se quiser fixar a versão (ex: artibex/piper-http:v2.0.0)
    restart: on-failure
    volumes:
      - ${APP_DATA_DIR}/data/models:/app/models # Para persistir os modelos baixados
    environment:
      FLASK_DEBUG: "1" # Mude para "0" ou remova esta linha para desativar em produção

      # Variáveis de ambiente para download do modelo Piper
      # O LINK DO MODELO FOI ATUALIZADO AQUI:
      MODEL_DOWNLOAD_LINK: https://huggingface.co/rhasspy/piper-voices/resolve/main/pt/pt_BR/faber/medium/pt_BR-faber-medium.onnx?download=true
      # Variáveis de ambiente para ajustar os parâmetros de síntese de voz do Piper
      # (Estas variáveis dependem de como a imagem 'artibex/piper-http' as implementa.
      # Se não funcionarem via ENV, o usuário pode passá-las via JSON no corpo da requisição POST.)
      PIPER_SPEAKER_ID: "0"
      PIPER_LENGTH_SCALE: "1.0"
      PIPER_NOISE_SCALE: "0.667"
      PIPER_NOISE_W: "0.8"
      PIPER_SENTENCE_SILENCE: "0.2"

      # Caso as variáveis acima não funcionem diretamente via ENV,
      # alguns contêineres podem esperar todos os argumentos como uma única string:
      # PIPER_ARGS: "--speaker 0 --length-scale 1.0 --noise-scale 0.667 --noise-w 0.8 --sentence-silence 0.2"
