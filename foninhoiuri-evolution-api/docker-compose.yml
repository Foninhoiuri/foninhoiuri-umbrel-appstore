version: '3.8'

services:
  evolution-api:
    image: atendai/evolution-api:latest
    container_name: evolution-api
    ports:
      - "8080:8080" # Porta externa:Porta interna do contêiner
    environment:
      # Variável de Autenticação ESSENCIAL
      AUTHENTICATION_API_KEY: "PGzwJe2qbXau58BiO0LRN2Zhrgq5av5c" # <<--- NOVA CHAVE DE AUTENTICAÇÃO INSERIDA AQUI

      # Configuração para Habilitar WebSockets
      WEBSOCKET_ENABLED: "true"

      # Configurações para o Redis (como cache)
      CACHE_REDIS_ENABLED: "true"
      CACHE_REDIS_URI: "redis://redis:6379"
      CACHE_REDIS_PREFIX_KEY: "evolution"
      CACHE_REDIS_TTL: "604800"
      CACHE_REDIS_SAVE_INSTANCES: "true"

      # Configurações para o PostgreSQL (como banco de dados principal)
      DATABASE_ENABLED: "true"
      DATABASE_PROVIDER: "postgresql"
      DATABASE_CONNECTION_URI: "postgresql://evolution:your_postgres_password@postgresql:5432/evolution?schema=public" # Mantenha a senha do PostgreSQL!

      SERVER_PORT: "8080"
      SERVER_URL: "http://evolution-api.umbrel.local" # URL para acesso interno no Umbrel
    volumes:
      - ${APP_DATA_DIR}/evolution-api/data:/app/data # Persistência de dados do Evolution API
    depends_on:
      - redis
      - postgresql
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis-evolution-api
    volumes:
      - ${APP_DATA_DIR}/redis:/data # Persistência de dados do Redis
    command: redis-server --appendonly yes
    restart: unless-stopped

  postgresql:
    image: postgres:13
    container_name: postgresql-evolution-api
    environment:
      POSTGRES_DB: evolution
      POSTGRES_USER: evolution
      POSTGRES_PASSWORD: "your_postgres_password" # Use a mesma senha definida acima!
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${APP_DATA_DIR}/postgresql:/var/lib/postgresql/data
    restart: unless-stopped
