version: "3.7"

services:
  # O serviço 'app_proxy' é o proxy reverso do Umbrel para o seu aplicativo.
  # Ele gerencia o acesso através da interface do Umbrel.
  app_proxy:
    environment:
      # APP_HOST deve apontar para o nome do serviço do seu aplicativo principal (neste caso, 'api').
      APP_HOST: evolution-api_api_1 # Atualizado de 'web' para 'api' para clareza
      # APP_PORT deve ser a porta INTERNA em que seu aplicativo escuta (8080 para o Evolution API).
      APP_PORT: 8080
      # Desabilita a autenticação padrão do Umbrel para este aplicativo,
      # confiando na autenticação interna da Evolution API (se houver).
      PROXY_AUTH_ADD: "false"

  # Este é o serviço principal do seu aplicativo Evolution API.
  api: # Renomeado de 'web' para 'api' para maior clareza, comum em serviços de API
    image: atendai/evolution-api:v1.8.6 # <<< INSIRA O SHA256 AQUI
    restart: on-failure # O aplicativo será reiniciado automaticamente em caso de falha.
    stop_grace_period: 1m # Dá ao aplicativo 1 minuto para desligar graciosamente.
    volumes:
      # Monta um volume persistente para os dados do aplicativo Evolution API.
      # Isso garante que os dados sejam mantidos mesmo se o contêiner for recriado.
      - ${APP_DATA_DIR}/data:/app/data # Usando 'data' como subdiretório padrão para persistência

    environment:
      # Porta interna em que o aplicativo Evolution API escuta.
      PORT: 8080
      # Define o ambiente como produção.
      NODE_ENV: production
      # Variável de conexão com o Redis (aponta para o serviço 'redis').
      # Confirme na documentação da Evolution API se o Redis precisa de alguma chave/senha.
      REDIS_URL: redis://redis:6379/0 # /0 indica o banco de dados 0 no Redis

      # Outras variáveis de ambiente que o Evolution API possa precisar
      # Exemplo: API_KEY: "${APP_PASSWORD}" # Use a senha do Umbrel para uma chave de API, se aplicável
      # Evolution API pode ter suas próprias variáveis de autenticação ou configuração,
      # verifique a documentação oficial.

    healthcheck: # Healthcheck ajustado para verificar internamente
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080 || exit 1"] # Verifica a porta 8080 no localhost do contêiner 'api'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

    depends_on:
      - redis # Depende do serviço Redis
